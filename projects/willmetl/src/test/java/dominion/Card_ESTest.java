/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 14 18:10:22 GMT 2017
 */

package dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dominion.Card;
import dominion.Player;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class Card_ESTest extends Card_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Card.Type[] card_TypeArray0 = Card.Type.values();
      assertNotNull(card_TypeArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Card.Type card_Type0 = Card.Type.valueOf("TREASURE");
      assertEquals(Card.Type.TREASURE, card_Type0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Card card0 = Card.FEAST;
      // Undeclared exception!
      try {
        card0.play((Player) null);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dominion.Card$7", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Card card0 = Card.CUTPURSE;
      // Undeclared exception!
      try {
        card0.play((Player) null);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dominion.Card$5", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Card card0 = Card.BARON;
      // Undeclared exception!
      try {
        card0.play((Player) null);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dominion.Card$3", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Card card0 = Card.AMBASSADOR;
      // Undeclared exception!
      try {
        card0.play((Player) null);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dominion.Card$2", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Card card0 = Card.SALVAGER;
      // Undeclared exception!
      try {
        card0.play((Player) null);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dominion.Card$11", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Card card0 = Card.MINE;
      // Undeclared exception!
      try {
        card0.play((Player) null);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dominion.Card$10", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Card[] cardArray0 = Card.values();
      assertNotNull(cardArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Card card0 = Card.valueOf("COPPER");
      assertEquals(Card.COPPER, card0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Card card0 = Card.valueOf("DUCHY");
      assertEquals("worth 3 victory points", card0.getDesc());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Card card0 = Card.CURSE;
      Card card1 = card0.play((Player) null);
      assertEquals(0, card1.getActionCost());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Card card0 = Card.ADVENTURER;
      int int0 = card0.getVictoryPoints((Player) null);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Card card0 = Card.CURSE;
      int int0 = card0.getVictoryPoints((Player) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Card card0 = Card.SMITHY;
      int int0 = card0.getVictoryPoints();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Card card0 = Card.ESTATE;
      int int0 = card0.getVictoryPoints();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Card card0 = Card.CURSE;
      int int0 = card0.getCost();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Card card0 = Card.EMBARGO;
      int int0 = card0.getActionCost();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try {
        Card.valueOf((String) null);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try {
        Card.valueOf("e[k%_>u");
        fail("Expecting exception: IllegalArgumentException");

      } catch(IllegalArgumentException e) {
         //
         // No enum constant dominion.Card.e[k%_>u
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Card card0 = Card.COPPER;
      // Undeclared exception!
      try {
        card0.play((Player) null);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dominion.Card", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Card card0 = Card.DUCHY;
      Card card1 = card0.play((Player) null);
      assertSame(card0, card1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Card card0 = Card.SMITHY;
      // Undeclared exception!
      try {
        card0.play((Player) null);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dominion.Card$12", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Card card0 = Card.COUNCILROOM;
      // Undeclared exception!
      try {
        card0.play((Player) null);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dominion.Card$4", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Card card0 = Card.ADVENTURER;
      // Undeclared exception!
      try {
        card0.play((Player) null);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dominion.Card$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Card card0 = Card.EMBARGO;
      // Undeclared exception!
      try {
        card0.play((Player) null);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dominion.Card$6", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Card card0 = Card.VILLAGE;
      // Undeclared exception!
      try {
        card0.play((Player) null);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dominion.Card$13", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Card card0 = Card.CURSE;
      int int0 = card0.getVictoryPoints();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Card card0 = Card.DUCHY;
      Card.Type card_Type0 = card0.getType();
      assertEquals(Card.Type.VICTORY, card_Type0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Card card0 = Card.DUCHY;
      int int0 = card0.getVictoryPoints((Player) null);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Card card0 = Card.CURSE;
      String string0 = card0.getDesc();
      assertEquals("worth -1 victory points", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Card card0 = Card.DUCHY;
      int int0 = card0.getCost();
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Card card0 = Card.DUCHY;
      int int0 = card0.getActionCost();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Card card0 = Card.DUCHY;
      String string0 = card0.toString();
      assertEquals("Duchy", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Card card0 = Card.GARDENS;
      // Undeclared exception!
      try {
        card0.getVictoryPoints((Player) null);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dominion.Card$8", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Card card0 = Card.GREAT_HALL;
      // Undeclared exception!
      try {
        card0.play((Player) null);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dominion.Card$9", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Card card0 = Card.GREAT_HALL;
      int int0 = card0.getVictoryPoints((Player) null);
      assertEquals(1, int0);
  }
}
