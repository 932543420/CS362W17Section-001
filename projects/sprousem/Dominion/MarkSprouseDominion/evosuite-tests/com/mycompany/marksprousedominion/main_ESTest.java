/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 28 07:03:41 GMT 2017
 */

package com.mycompany.marksprousedominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.mycompany.marksprousedominion.main;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class main_ESTest extends main_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 4 covered goals:
   * Goal 1. main([Ljava/lang/String;)V_java.lang.NumberFormatException_IMPLICIT
   * Goal 2. com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: Line 14
   * Goal 3. [METHOD] com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V
   * Goal 4. Weak Mutation 0: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:14 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[8];
      // Undeclared exception!
      try { 
        main.main(stringArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         assertThrownBy("java.lang.Integer", e);
      }
  }

  //Test case number: 1
  /*
   * 4 covered goals:
   * Goal 1. main([Ljava/lang/String;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 2. com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: Line 14
   * Goal 3. [METHOD] com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V
   * Goal 4. Weak Mutation 0: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:14 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        main.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.mycompany.marksprousedominion.main", e);
      }
  }

  //Test case number: 2
  /*
   * 15 covered goals:
   * Goal 1. main([Ljava/lang/String;)V_java.lang.IndexOutOfBoundsException_IMPLICIT
   * Goal 2. com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: Line 14
   * Goal 3. com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: Line 15
   * Goal 4. com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: Line 17
   * Goal 5. com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: Line 20
   * Goal 6. [METHOD] com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V
   * Goal 7. Weak Mutation 0: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:14 - ReplaceConstant - 0 -> 1
   * Goal 8. Weak Mutation 1: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:15 - ReplaceConstant - 1 -> 0
   * Goal 9. Weak Mutation 3: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:17 - InsertUnaryOp Negation of seed
   * Goal 10. Weak Mutation 4: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:17 - InsertUnaryOp IINC 1 seed
   * Goal 11. Weak Mutation 5: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:17 - InsertUnaryOp IINC -1 seed
   * Goal 12. Weak Mutation 6: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:17 - ReplaceComparisonOperator == -> !=
   * Goal 13. Weak Mutation 8: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:20 - InsertUnaryOp Negation of numPlayers
   * Goal 14. Weak Mutation 9: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:20 - InsertUnaryOp IINC 1 numPlayers
   * Goal 15. Weak Mutation 10: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:20 - InsertUnaryOp IINC -1 numPlayers
   */

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "0";
      stringArray0[1] = "0";
      // Undeclared exception!
      try { 
        main.main(stringArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  //Test case number: 3
  /*
   * 4 covered goals:
   * Goal 1. main([Ljava/lang/String;)V_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 2. com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: Line 14
   * Goal 3. [METHOD] com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V
   * Goal 4. Weak Mutation 0: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:14 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        main.main(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("com.mycompany.marksprousedominion.main", e);
      }
  }

  //Test case number: 4
  /*
   * 51 covered goals:
   * Goal 1. com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: I50 Branch 1 IF_ICMPGE L25 - true
   * Goal 2. com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: I50 Branch 1 IF_ICMPGE L25 - false
   * Goal 3. com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: I71 Branch 2 IFEQ L29 - true
   * Goal 4. com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: I71 Branch 2 IFEQ L29 - false
   * Goal 5. com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: I85 Branch 3 IFEQ L32 - true
   * Goal 6. com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: I85 Branch 3 IFEQ L32 - false
   * Goal 7. Branch com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: I50 Branch 1 IF_ICMPGE L25 - false in context: com.mycompany.marksprousedominion.main:main([Ljava/lang/String;)V
   * Goal 8. Branch com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: I50 Branch 1 IF_ICMPGE L25 - true in context: com.mycompany.marksprousedominion.main:main([Ljava/lang/String;)V
   * Goal 9. Branch com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: I71 Branch 2 IFEQ L29 - true in context: com.mycompany.marksprousedominion.main:main([Ljava/lang/String;)V
   * Goal 10. Branch com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: I71 Branch 2 IFEQ L29 - false in context: com.mycompany.marksprousedominion.main:main([Ljava/lang/String;)V
   * Goal 11. Branch com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: I85 Branch 3 IFEQ L32 - true in context: com.mycompany.marksprousedominion.main:main([Ljava/lang/String;)V
   * Goal 12. Branch com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: I85 Branch 3 IFEQ L32 - false in context: com.mycompany.marksprousedominion.main:main([Ljava/lang/String;)V
   * Goal 13. com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: Line 14
   * Goal 14. com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: Line 15
   * Goal 15. com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: Line 17
   * Goal 16. com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: Line 20
   * Goal 17. com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: Line 25
   * Goal 18. com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: Line 27
   * Goal 19. com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: Line 28
   * Goal 20. com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: Line 29
   * Goal 21. com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: Line 30
   * Goal 22. com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: Line 32
   * Goal 23. com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: Line 33
   * Goal 24. com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V: Line 38
   * Goal 25. [METHOD] com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V
   * Goal 26. [METHODNOEX] com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V
   * Goal 27. Weak Mutation 0: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:14 - ReplaceConstant - 0 -> 1
   * Goal 28. Weak Mutation 1: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:15 - ReplaceConstant - 1 -> 0
   * Goal 29. Weak Mutation 3: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:17 - InsertUnaryOp Negation of seed
   * Goal 30. Weak Mutation 4: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:17 - InsertUnaryOp IINC 1 seed
   * Goal 31. Weak Mutation 5: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:17 - InsertUnaryOp IINC -1 seed
   * Goal 32. Weak Mutation 6: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:17 - ReplaceComparisonOperator == -> !=
   * Goal 33. Weak Mutation 8: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:20 - InsertUnaryOp Negation of numPlayers
   * Goal 34. Weak Mutation 9: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:20 - InsertUnaryOp IINC 1 numPlayers
   * Goal 35. Weak Mutation 10: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:20 - InsertUnaryOp IINC -1 numPlayers
   * Goal 36. Weak Mutation 11: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:25 - ReplaceConstant - 0 -> 1
   * Goal 37. Weak Mutation 12: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:25 - ReplaceVariable i -> seed
   * Goal 38. Weak Mutation 13: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:25 - ReplaceVariable i -> numPlayers
   * Goal 39. Weak Mutation 14: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:25 - InsertUnaryOp Negation of i
   * Goal 40. Weak Mutation 15: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:25 - InsertUnaryOp IINC 1 i
   * Goal 41. Weak Mutation 16: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:25 - InsertUnaryOp IINC -1 i
   * Goal 42. Weak Mutation 18: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:25 - ReplaceVariable numPlayers -> i
   * Goal 43. Weak Mutation 19: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:25 - InsertUnaryOp Negation of numPlayers
   * Goal 44. Weak Mutation 20: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:25 - InsertUnaryOp IINC 1 numPlayers
   * Goal 45. Weak Mutation 21: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:25 - InsertUnaryOp IINC -1 numPlayers
   * Goal 46. Weak Mutation 22: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:25 - ReplaceComparisonOperator >= -> -1
   * Goal 47. Weak Mutation 23: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:25 - ReplaceComparisonOperator >= -> >
   * Goal 48. Weak Mutation 26: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:25 - ReplaceVariable i -> seed
   * Goal 49. Weak Mutation 27: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:25 - ReplaceVariable i -> numPlayers
   * Goal 50. Weak Mutation 25: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:29 - ReplaceComparisonOperator == -> !=
   * Goal 51. Weak Mutation 28: com.mycompany.marksprousedominion.main.main([Ljava/lang/String;)V:32 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "3";
      stringArray0[1] = "3";
      main.main(stringArray0);
  }

  //Test case number: 5
  /*
   * 4 covered goals:
   * Goal 1. com.mycompany.marksprousedominion.main.<init>()V: root-Branch
   * Goal 2. Branch com.mycompany.marksprousedominion.main.<init>()V: root-Branch in context: com.mycompany.marksprousedominion.main:<init>()V
   * Goal 3. [METHOD] com.mycompany.marksprousedominion.main.<init>()V
   * Goal 4. [METHODNOEX] com.mycompany.marksprousedominion.main.<init>()V
   */

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      main main0 = new main();
  }
}
