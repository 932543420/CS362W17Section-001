/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 28 05:15:54 GMT 2017
 */

package dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dominion.Card;
import dominion.GameState;
import dominion.Player;
import java.util.LinkedList;
import java.util.List;
import java.util.Random;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player((GameState) null, "a0s5Z/&|");
      Player player1 = player0.clone();
      player0.numBuys = (-564);
      player0.buyCard((GameState) null);
      player0.drawCard();
      player1.drawType((Card) null);
      player0.trash((Card) null);
      player0.clone();
      player1.tempcoins = 11;
      // Undeclared exception!
      try { 
        player1.initializePlayerTurn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((GameState) null, ":Z}u4$\"CWww9G&/^OLP");
      LinkedList<Card> linkedList0 = player0.deck;
      player0.deck = linkedList0;
      MockRandom mockRandom0 = (MockRandom)player0.randomGenerator;
      player0.randomGenerator = (Random) mockRandom0;
      player0.buyCard((GameState) null);
      player0.tempcoins = 46;
      player0.player_username = "";
      int int0 = player0.tempcoins;
      player0.toString();
      player0.drawCard();
      player0.discard((Card) null);
      List<Card> list0 = player0.discard;
      // Undeclared exception!
      try { 
        player0.endTurn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      Player player1 = new Player((GameState) null, "");
      LinkedList<Card> linkedList0 = player1.deck;
      player0.deck = linkedList0;
      player0.numBuys = 500;
      Player player2 = player0.clone();
      player2.drawCard();
      List<Card> list0 = player0.playedCards;
      player0.playedCards = list0;
      player1.buyCard((GameState) null);
      player0.toString();
      player2.buyCard((GameState) null);
      player0.trash((Card) null);
      MockRandom mockRandom0 = (MockRandom)player2.randomGenerator;
      player2.randomGenerator = (Random) mockRandom0;
      player0.playTreasureCard();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((GameState) null, "kCtG3=/)m2]}\"sZj");
      Player player1 = player0.clone();
      List<Card> list0 = player0.hand;
      player0.discard = list0;
      player0.initializePlayerTurn();
      player1.tempcoins = (-449);
      player0.drawCard();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Card.Type.values();
      Player player0 = new Player((GameState) null, (String) null);
      player0.tempcoins = (-1017);
      Player player1 = player0.clone();
      player1.player_username = null;
      player1.playTreasureCard();
      Player player2 = new Player((GameState) null, (String) null);
      player0.coins = 3;
      player2.playKingdomCard();
      Player player3 = new Player((GameState) null, (String) null);
      MockRandom mockRandom0 = (MockRandom)player2.randomGenerator;
      player3.randomGenerator = (Random) mockRandom0;
      player3.tempcoins = (-1834);
      player2.playKingdomCard();
      List<Card> list0 = player2.playedCards;
      Player player4 = new Player((GameState) null, "j");
      player4.discard = list0;
      List<Card> list1 = player2.discard;
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((GameState) null, "&>l^OKd+jr`{E]\")");
      player0.playedCards = null;
      // Undeclared exception!
      try { 
        player0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((GameState) null, "coins: ");
      Player player1 = player0.clone();
      player1.numActions = 833;
      player0.numActions = 400;
      MockRandom mockRandom0 = (MockRandom)player0.randomGenerator;
      player1.randomGenerator = (Random) mockRandom0;
      player0.numActions = (-1);
      player1.playTreasureCard();
      MockRandom mockRandom1 = (MockRandom)player0.randomGenerator;
      player0.randomGenerator = (Random) mockRandom1;
      player1.tempcoins = (-1143);
      player1.drawType((Card) null);
      player1.numActions = (-1);
      player1.trash((Card) null);
      player0.gain((Card) null);
      player1.discard((Card) null);
      player0.drawType((Card) null);
      LinkedList<Card> linkedList0 = player0.deck;
      String string0 = player0.player_username;
      // Undeclared exception!
      try { 
        player0.discardType((Card) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((GameState) null, "7S");
      player0.coins = (-372);
      Player player1 = new Player((GameState) null, "7S");
      player1.drawCard();
      player0.discard((Card) null);
      player0.playTreasureCard();
      player0.playKingdomCard();
      int int0 = player0.numBuys;
      player0.toString();
      player0.drawCard();
      player0.trash((Card) null);
      LinkedList<Card> linkedList0 = player0.deck;
      player0.deck = linkedList0;
      player0.drawType((Card) null);
      // Undeclared exception!
      try { 
        player0.scoreFor((GameState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      player0.numActions = 57;
      Player player1 = player0.clone();
      player1.toString();
      player1.playKingdomCard();
      int int0 = player1.numBuys;
      List<Card> list0 = player0.hand;
      player1.hand = list0;
      int int1 = player0.numActions;
      // Undeclared exception!
      try { 
        player0.printStateGame();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Card.Type.values();
      Player player0 = new Player((GameState) null, "E2\"l^G/d3eoCGH");
      player0.tempcoins = (-1529);
      player0.playKingdomCard();
      player0.toString();
      // Undeclared exception!
      try { 
        Card.Type.valueOf("c");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant dominion.Card.Type.c
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((GameState) null, "Buying");
      player0.drawCard();
      player0.numBuys = 1384;
      List<Card> list0 = player0.playedCards;
      player0.discard = list0;
      player0.gain((Card) null);
      List<Card> list1 = player0.playedCards;
      // Undeclared exception!
      try { 
        player0.drawCard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      Player player1 = player0.clone();
      player1.drawCard();
      player1.discard((Card) null);
      int int0 = player1.coins;
      player1.gain((Card) null);
      // Undeclared exception!
      try { 
        player1.initializePlayerTurn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((GameState) null, "3h&7'|Xhf@~`so");
      player0.toString();
      Player player1 = new Player((GameState) null, "%Y-%M-%DT%h:%m:%s%z");
      player1.drawCard();
      player1.drawType((Card) null);
      // Undeclared exception!
      try { 
        player1.playTreasureCard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Card", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player((GameState) null, "RcG_G&9EUL 0^$lQ4Sv");
      player0.playTreasureCard();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((GameState) null, "i?9");
      Player player1 = player0.clone();
      MockRandom mockRandom0 = (MockRandom)player0.randomGenerator;
      player1.randomGenerator = (Random) mockRandom0;
      int int0 = (-1865);
      player1.numBuys = (-1865);
      player0.buyCard((GameState) null);
      player1.drawCard();
      player0.discard((Card) null);
      player1.playKingdomCard();
      Player player2 = new Player((GameState) null, "<+^mq+RX/");
      LinkedList<Card> linkedList0 = player2.deck;
      // Undeclared exception!
      try { 
        player2.scoreFor((GameState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GameState gameState0 = null;
      Player player0 = new Player((GameState) null, "s");
      player0.playTreasureCard();
      List<Card> list0 = player0.discard;
      player0.drawCard();
      player0.drawType((Card) null);
      // Undeclared exception!
      try { 
        player0.discardType((Card) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GameState gameState0 = null;
      Player player0 = new Player((GameState) null, "(-");
      player0.drawCard();
      player0.drawType((Card) null);
      player0.gain((Card) null);
      player0.tempcoins = 0;
      int int0 = 3329;
      LinkedList<Card> linkedList0 = player0.deck;
      player0.coins = 3329;
      player0.buyCard((GameState) null);
      // Undeclared exception!
      try { 
        player0.printStateGame();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      player0.numActions = 753;
      player0.coins = 2155;
      player0.drawCard();
      player0.player_username = "`H3jk|";
      Player player1 = new Player((GameState) null, " Throw's away ");
      List<Card> list0 = player1.playedCards;
      player1.hand = list0;
      player1.buyCard((GameState) null);
      player1.numActions = 2155;
      player1.playKingdomCard();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((GameState) null, "a0s5*/6|");
      Player player1 = player0.clone();
      player0.buyCard((GameState) null);
      player0.clone();
      player1.tempcoins = 11;
      // Undeclared exception!
      try { 
        player1.initializePlayerTurn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      Player player1 = new Player((GameState) null, "");
      LinkedList<Card> linkedList0 = player1.deck;
      player0.deck = linkedList0;
      player0.numBuys = 500;
      Player player2 = player0.clone();
      player2.drawCard();
      List<Card> list0 = player0.playedCards;
      player0.playedCards = list0;
      player1.buyCard((GameState) null);
      player0.toString();
      player2.buyCard((GameState) null);
      player0.trash((Card) null);
      MockRandom mockRandom0 = (MockRandom)player2.randomGenerator;
      player2.randomGenerator = (Random) mockRandom0;
      player0.buyCard((GameState) null);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      Player player1 = new Player((GameState) null, "");
      LinkedList<Card> linkedList0 = player1.deck;
      player0.deck = linkedList0;
      player0.numBuys = 500;
      Player player2 = player0.clone();
      player2.drawCard();
      List<Card> list0 = player0.playedCards;
      player0.playedCards = list0;
      player1.buyCard((GameState) null);
      player2.coins = 10;
      player0.toString();
      // Undeclared exception!
      try { 
        player2.buyCard((GameState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GameState gameState0 = null;
      String string0 = "";
      Player player0 = new Player((GameState) null, "");
      player0.numActions = 1505;
      Player player1 = player0.clone();
      player1.drawCard();
      // Undeclared exception!
      try { 
        player1.endTurn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
